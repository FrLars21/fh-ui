"""Fill in a module description here"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['css_scope_inline', 'css_vars', 'Button', 'Input', 'Label']

# %% ../nbs/00_core.ipynb 2
import fasthtml.common as fh
from fastcore.meta import delegates

# %% ../nbs/00_core.ipynb 5
css_scope_inline = (fh.Script(src="https://cdn.jsdelivr.net/gh/gnat/css-scope-inline@main/script.js"))
#css_reset = 
css_vars = fh.Style("""
root: {
    --color-zinc-50: #ececec;
}
""")

# %% ../nbs/00_core.ipynb 8
@delegates(fh.ft_hx, keep=True)
def Button(*args, variant:str = "default", **kwargs):
    styles = """
    me {
        height: 4rem;
        padding-left: 2rem;
        padding-right: 2rem;
        border: 1px solid #ececec;
        border-radius: 0.5rem;
    }
    """
    if variant == "default":
        styles += "me { background: gray; }"
    elif variant == "outline":
        styles += "me { background: white; }"
    elif variant == "ghost":
        styles += "me { background: blue; }"
    return fh.Button(
        fh.Style(styles), *args, **kwargs)

# %% ../nbs/00_core.ipynb 11
@delegates(fh.ft_hx, keep=True)
def Input(*args, **kwargs):
    styles = f"""
    me {{
        border: 5px solid black;
    }}
    """
    return fh.Input(
        fh.Style(styles), *args, **kwargs)

# %% ../nbs/00_core.ipynb 14
@delegates(fh.ft_hx, keep=True)
def Label(*args, **kwargs):
    styles = f"""
    me {{
        color: green;
    }}
    """
    return fh.Label(
        fh.Style(styles), *args, **kwargs)
